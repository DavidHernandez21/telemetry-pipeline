events {
    worker_connections 1024;
}

http {
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log debug;

    # This is required to proxy Grafana Live WebSocket connections.
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    server {
        listen 6000;
        http2 on;
        server_name _;

        location / {
                grpc_pass      grpc://vector_aggregator_metrics6000;
                grpc_next_upstream     error timeout invalid_header http_500;
                grpc_connect_timeout   2;
                grpc_set_header        Host            $host;
                grpc_set_header        X-Real-IP       $remote_addr;
                grpc_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }

    server {
        listen 6001;
        http2 on;
        server_name _;

        location / {
                grpc_pass      grpc://vector_aggregator_logs6001;
                grpc_next_upstream     error timeout invalid_header http_500;
                grpc_connect_timeout   2;
                grpc_set_header        Host            $host;
                grpc_set_header        X-Real-IP       $remote_addr;
                grpc_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }

    upstream vector_aggregator_metrics6000 {

        server openobserve_tutorial-vector-aggregator-1:6000;
        server openobserve_tutorial-vector-aggregator-2:6000;

    }

    upstream vector_aggregator_logs6001 {

        server openobserve_tutorial-vector-aggregator-1:6001;
        server openobserve_tutorial-vector-aggregator-2:6001;

    }


    server {
        listen 8082 ssl;
        http2 on;
        server_name 127.0.0.1 localhost;

        ssl_certificate /certs/cert.pem;
        ssl_certificate_key /certs/cert-key.pem;

        # root /usr/share/nginx/www;
        # index index.html index.htm;

        location /grafana/ {
            proxy_set_header Host $host;
            proxy_pass http://grafana;
            rewrite  ^/grafana/(.*)  /$1 break;
        }

        # Proxy Grafana Live WebSocket connections.
        location /grafana/api/live/ {
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_pass http://grafana;
            rewrite  ^/grafana/(.*)  /$1 break;
        }

        location /openobserve/ {
            proxy_pass http://openobserve;
        }



        location /rabbitmq/ {
            # Strip off the "/rabbitmq" prefix
            rewrite  ^/rabbitmq/(.*) /$1 break;

            # Do NOT suffix proxy_pass path with a trailing "/". This allows NGINX to pass the client request completely unchanged.
            #    - see http://mailman.nginx.org/pipermail/nginx/2009-November/016577.html
            proxy_pass http://rabbitmq;
        }

        #     # Skip certificate validation
        #     proxy_ssl_verify off;
        # }

        location /victoriametrics/ {
            rewrite ^/victoriametrics/(.*) /$1 break;
            proxy_pass http://victoriametrics;

        }

        # location /flower/ {
        #     auth_basic "Administratorâ€™s Area";
        #     # /etc/nginx/.htpasswd
        #     auth_basic_user_file /nginx/auth/.htpasswd;
        #     proxy_pass http://flower:5555;
        # }

        location = /error502grpc {
            internal;
            default_type application/grpc;
            add_header grpc-status 14;
            add_header content-length 0;
            return 204;
        }
    }

     upstream grafana {
        server grafana:3000;
        keepalive 32;
    }

    upstream rabbitmq {
        server rabbitmq:15672;
        keepalive 32;
    }

    upstream victoriametrics {
        server victoriametrics:8428;
        keepalive 32;
    }

    upstream openobserve {
        server openobserve:5080;
        keepalive 32;
    }
}
